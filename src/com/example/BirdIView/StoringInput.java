/** Description of StoringInput Class
 *
 * Here the dat from the individual screen is taken and a list of possible birds is
 * generated by a series of conditional loops
 * The list is then sent as object instances of the bird class(which acts as the DAO)
 * to the BirdAdapter Class *
 */

package com.example.BirdIView;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;

import java.io.File;
import java.io.InputStream;
import java.util.Scanner;

/**
 * Created by Bhavani on 08-07-2015.
 */
public class StoringInput extends Activity {

    public static final int DEF = 0;
    public static final int NO_BIRDS = 21;
    ListView listview;
    //MediaPlayer mp;


    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.prob_birds);
        //mp = MediaPlayer.create(this,R.raw.blackdrongo);

        InputStream inFile1 = getResources().openRawResource(R.raw.data);

        Button bReturn = (Button) findViewById(R.id.BtnReturn);
        bReturn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(StoringInput.this, MainMenu.class);
                startActivity(intent);
            }
        });

        SharedPreferences sizeP = getSharedPreferences("sizeV", Context.MODE_PRIVATE);
        int sizeI = sizeP.getInt("sizeV", DEF);

        SharedPreferences colorCP = getSharedPreferences("colorC", Context.MODE_PRIVATE);
        int colorCI = colorCP.getInt("colorC", DEF);

        SharedPreferences colorBP = getSharedPreferences("colorB", Context.MODE_PRIVATE);
        int colorBI = colorBP.getInt("colorB", DEF);

        SharedPreferences beakP = getSharedPreferences("beakR", Context.MODE_PRIVATE);
        int beakI = beakP.getInt("beakR", DEF);

        SharedPreferences habiP = getSharedPreferences("habiB", Context.MODE_PRIVATE);
        int habiI = habiP.getInt("habiB", DEF);

        Button bReport = (Button) findViewById(R.id.BtnReport);
        bReport.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view2) {
                Intent intent = new Intent(StoringInput.this, Report.class);
                startActivity(intent);
            }
        });


        TextView txtInfo = (TextView) findViewById(R.id.txtInfo);

        int no_birds =0;
        int[] birdSize =    {1,3,8,7,6,5,8,8,1,0,6,5,9,1,0,3,4,6,4,8,2,1,3,2};//{7,8,6,9,1,2,2,2,3,3,3,3,6,6,8,2,6,10,2,3,3};
        int[] habiTat =     {2,3,3,2,4,3,3,3,2,2,3,4,1,2,2,3,4,4,3,4,3,2,3,3};
        int[] beakSize =    {6,6,5,5,3,7,7,2,7,7,6,3,5,6,7,4,4,4,7,4,6,7,6,4};
        int[] colorChest =  {3,1,3,4,3,2,1,4,3,3,2,3,3,9,6,2,3,3,1,2,3,3,3,8};
        int[] colorBack =   {2,1,3,4,3,1,1,4,2,2,2,3,2,2,2,2,2,1,2,2,1,1,3,7};
        int x=0;

        String token1 ="";
        Scanner inFile1 = new Scanner(new File("data.txt")).useDelimiter(",\\s*");

        token1 = inFile1.nextLine();
        no_birds = inFile1.nextInt();

        while(inFile1.hasNext()) {
            token1 = inFile1.nextLine();
            birdSize[x] = inFile1.nextInt();
        }
        x=0;
        while(inFile1.hasNext()) {
            token1 = inFile1.nextLine();
            habiTat[x] = inFile1.nextInt();
        }
        x=0;
        while(inFile1.hasNext()) {
            token1 = inFile1.nextLine();
            beakSize[x] = inFile1.nextInt();
        }
       x=0;
        while(inFile1.hasNext()) {
            token1 = inFile1.nextLine();
            colorChest[x] = inFile1.nextInt();
        }
        x=0;
        while(inFile1.hasNext()) {
            token1 = inFile1.nextLine();
            colorBack[x] = inFile1.nextInt();
        }

        String[] birdName = new String[no_birds];

        x=0;
        while(inFile1.hasNext()) {
            token1 = inFile1.nextLine();
            birdName[x] = inFile1.nextLine();
        }


        StringBuffer buffer_info = new StringBuffer();
        buffer_info.append("Datatobeshown:\n Size" + sizeI + "\n Beak" + beakI + "\n Hab" + habiI + "\n colorC" + colorCI + "\n colorB" + colorBI);

        String possible = "";

        int[] id_sel = new int[NO_BIRDS];
        int p=0;
        int[] idS = new int[NO_BIRDS], idB = new int[NO_BIRDS], idCC = new int[NO_BIRDS], idCB = new int[NO_BIRDS], idH = new int[NO_BIRDS];
        int index_S=0, index_B=0,index_CC=0,index_CB=0,index_H=0;
        int flag=0;
        int no=0;

        for(int i=0;i<NO_BIRDS;i++) {
            id_sel[i] = -1;
            idS[i] = -1;
            idB[i] = -1;
            idCB[i] = -1;
            idCC[i] = -1;
            idH[i] = -1;
        }

        for(int i=0;i<NO_BIRDS;i++) {
            if(sizeI >= 1 && sizeI <= 10) //add ids of birds which fit indiv characteristics
                if (sizeI == birdSize[i])
                    if(index_S < 5)
                        idS[index_S++] = i;
        }

        for(int i=0;i<NO_BIRDS;i++) {
            if(colorBI >= 1 && colorBI <=9)
                if (colorBI == colorBack[i]) //add ids of birds which fit indiv characteristics
                    if(index_CB < 5)
                        idCB[index_CB++] = i;
        }

        for(int i=0;i<NO_BIRDS;i++) {
            if(colorCI >= 1 && colorCI <=9)
                if (colorCI == colorChest[i]) //add ids of birds which fit indiv characteristics
                    if(index_CC < 5)
                    idCC[index_CC++] = i;
        }

        for(int i=0;i<NO_BIRDS;i++) {
            if(beakI >= 1 && beakI <=7)
                if (beakI == beakSize[i]) //add ids of birds which fit indiv characteristics
                    if(index_B < 5)
                    idB[index_B++] = i;
        }

        for(int i=0;i<NO_BIRDS;i++) {
            if(habiI >=1 && habiI <= 4)
                if (habiI == habiTat[i]) //add ids of birds which fit indiv characteristics
                    if(index_H < 5)
                    idH[index_H++] = i;
        }

        for(int i=0;i<index_S;i++) {
            for (int j = 0; j < index_CC; j++) {
                for (int k = 0; k < index_CB; k++) {
                    for (int l = 0; l < index_B; l++) {
                        for (int m = 0; m < index_H; m++) {
                            if (idS[i] == idCC[j] && idS[i] == idCB[k] && idS[i] == idB[l] && idS[i] == idH[m])//add all that match comb of all
                                if (!presentIn(id_sel, idCC[j])) {
                                    id_sel[p++] = idS[i];
                                    flag =1;
                                }
                        }
                    }
                }
            }
        }

        if(flag == 0) {
            for (int i = 0; i < index_CC; i++) {
                if (!presentIn(id_sel, idCC[i]))//add all that match colorC
                    id_sel[p++] = idCC[i];
            }

            for (int k = 0; k < index_CB; k++) {
                if (!presentIn(id_sel, idCB[k])) //add all that match colorB
                    id_sel[p++] = idCB[k];
            }

            for (int i = 0; i < index_S; i++) {
                if (!presentIn(id_sel, idS[i]))//add all that match size
                    id_sel[p++] = idS[i];
            }

            for (int i = 0; i < index_S; i++) {
                for (int j = 0; j < index_CC; j++) {
                    if (idS[i] == idCC[j])//add all that match comb of size and colorC
                        if (!presentIn(id_sel, idCC[j]))
                            id_sel[p++] = idS[i];
                }
            }

            for (int i = 0; i < index_S; i++) {
                for (int j = 0; j < index_CB; j++) {
                    if (idS[i] == idCB[j])//add all that match comb of size and colorB
                        if (!presentIn(id_sel, idCB[j]))
                            id_sel[p++] = idS[i];
                }
            }

            for (int i = 0; i < index_S; i++) {
                for (int j = 0; j < index_CC; j++) {
                    for (int k = 0; k < index_CB; k++) {
                        if (idS[i] == idCC[j] && idS[i] == idCB[k])//add all that match comb of size and colorC and colorB
                            if (!presentIn(id_sel, idCC[j]))
                                id_sel[p++] = idS[i];
                    }
                }
            }

            for (int i = 0; i < index_S; i++) {
                for (int j = 0; j < index_H; j++) {
                    if (idS[i] == idH[j])//add all that match comb of size and hab
                        if (!presentIn(id_sel, idH[j]))
                            id_sel[p++] = idS[i];
                }
            }

            for (int i = 0; i < index_S; i++) {
                for (int j = 0; j < index_B; j++) {
                    if (idS[i] == idB[j])//add all that match comb of size and beak
                        if (!presentIn(id_sel, idB[j]))
                            id_sel[p++] = idS[i];
                }
            }

            for (int i = 0; i < index_CC; i++) {
                for (int j = 0; j < index_B; j++) {
                    if (idCC[i] == idB[j])//add all that match comb of colorC and beak
                        if (!presentIn(id_sel, idB[j]))
                            id_sel[p++] = idCC[i];
                }
            }

            for (int i = 0; i < index_CB; i++) {
                for (int j = 0; j < index_B; j++) {
                    if (idCB[i] == idB[j])//add all that match comb of colorB and beak
                        if (!presentIn(id_sel, idB[j]))
                            id_sel[p++] = idCB[i];
                }
            }


            for (int i = 0; i < NO_BIRDS; i++) {
                if (id_sel[i] != -1) {
                    buffer_info.append(birdName[id_sel[i]] + " ");
                    no++;
                }
            }

            if (no < 5) {
                for (int i = 0; i < index_H; i++) {
                    if (!presentIn(id_sel, idH[i])) {
                        id_sel[p++] = idH[i];
                        no++;
                    }
                    for (int j = 0; j < index_B; j++) {
                        if (idCC[i] == idB[j])//add all that match comb of hab and beak
                            if (!presentIn(id_sel, idB[j])) {
                                id_sel[p++] = idB[j];
                                no++;
                            }
                    }
                }
            }
        }
        Log.d("Birds probable:",buffer_info.toString());

        listview = (ListView) findViewById(R.id.list_birds);
        BirdAdapter adapter = new BirdAdapter(getApplicationContext(),R.layout.list_prob_bird);


        for(int i=0 ; i < no && id_sel[i] != -1; i++){

            Bird obj = new Bird(no, birdName[id_sel[i]]);//call_res[id_sel[i]]
            adapter.add(obj);
        }
        listview.setAdapter(adapter);
    }

    public boolean presentIn(int[] array,int check){
        for(int i=0;i<array.length;i++){
            if(check == array[i])
                return true;
        }
        return false;
    }

}
